"""Create initial database schema

Revision ID: a41bd809ab11
Revises: 
Create Date: 2025-08-07 07:15:49.737089

"""
from alembic import op
import sqlalchemy as sa
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision = 'a41bd809ab11' # Replace with your actual revision ID if you want
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp";')
    op.execute('CREATE EXTENSION IF NOT EXISTS "vector";')

    op.create_table('organizations',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('subscription_tier', sa.String(), server_default='free', nullable=False),
    sa.Column('subscription_status', sa.String(), server_default='inactive', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_stripe_customer_id'), 'organizations', ['stripe_customer_id'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('supabase_auth_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), server_default='member', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_supabase_auth_id'), 'users', ['supabase_auth_id'], unique=True)

    op.create_table('agents',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('objective', sa.String(), nullable=False),
    sa.Column('success_goal_description', sa.Text(), nullable=True),
    sa.Column('success_goal_embedding', Vector(dim=1536), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('agent_api_keys',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('key_prefix', sa.String(length=8), nullable=False),
    sa.Column('hashed_key', sa.String(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='true', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_api_keys_key_prefix'), 'agent_api_keys', ['key_prefix'], unique=False)

    op.create_table('historical_uploads',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('total_interactions', sa.Integer(), nullable=True),
    sa.Column('processed_interactions', sa.Integer(), server_default='0', nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('upload_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('processing_completed_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('learned_patterns',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('trigger_context_summary', sa.Text(), nullable=True),
    sa.Column('trigger_embedding', Vector(dim=1536), nullable=True),
    sa.Column('suggested_strategy', sa.Text(), nullable=False),
    sa.Column('impressions', sa.Integer(), server_default='0', nullable=False),
    sa.Column('success_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('status', sa.String(), server_default='CANDIDATE', nullable=False),
    sa.Column('version', sa.Integer(), server_default='1', nullable=False),
    sa.Column('parent_pattern_id', sa.UUID(), nullable=True),
    sa.Column('historical_evidence_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['parent_pattern_id'], ['learned_patterns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_learned_patterns_status'), 'learned_patterns', ['status'], unique=False)

    op.create_table('experiments',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('control_pattern_id', sa.UUID(), nullable=False),
    sa.Column('challenger_pattern_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(), server_default='RUNNING', nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['challenger_pattern_id'], ['learned_patterns.id'], ),
    sa.ForeignKeyConstraint(['control_pattern_id'], ['learned_patterns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    op.create_table('interactions',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('context', sa.JSON(), nullable=True),
    sa.Column('context_embedding', Vector(dim=1536), nullable=True),
    sa.Column('full_transcript', sa.Text(), nullable=True),
    sa.Column('applied_pattern_id', sa.UUID(), nullable=True),
    sa.Column('cost_usd', sa.Numeric(precision=10, scale=6), server_default='0.0', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['applied_pattern_id'], ['learned_patterns.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interactions_session_id'), 'interactions', ['session_id'], unique=False)

    op.create_table('historical_interactions',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('upload_id', sa.UUID(), nullable=False),
    sa.Column('original_context', sa.JSON(), nullable=True),
    sa.Column('original_response', sa.Text(), nullable=True),
    sa.Column('extracted_outcome', sa.JSON(), nullable=True),
    sa.Column('is_success', sa.Boolean(), nullable=False),
    sa.Column('contributed_to_pattern_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['contributed_to_pattern_id'], ['learned_patterns.id'], ),
    sa.ForeignKeyConstraint(['upload_id'], ['historical_uploads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('outcomes',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('interaction_id', sa.UUID(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('is_success', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['interaction_id'], ['interactions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('interaction_id')
    )
    op.create_index(op.f('ix_outcomes_is_success'), 'outcomes', ['is_success'], unique=False)
    
    op.create_table('suggested_opportunities',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('suggested_action', sa.Text(), nullable=False),
    sa.Column('impact_forecast', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('status', sa.String(), server_default='NEW', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_suggested_opportunities_status'), 'suggested_opportunities', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_suggested_opportunities_status'), table_name='suggested_opportunities')
    op.drop_table('suggested_opportunities')
    op.drop_index(op.f('ix_outcomes_is_success'), table_name='outcomes')
    op.drop_table('outcomes')
    op.drop_table('historical_interactions')
    op.drop_index(op.f('ix_interactions_session_id'), table_name='interactions')
    op.drop_table('interactions')
    op.drop_table('experiments')
    op.drop_index(op.f('ix_learned_patterns_status'), table_name='learned_patterns')
    op.drop_table('learned_patterns')
    op.drop_table('historical_uploads')
    op.drop_index(op.f('ix_agent_api_keys_key_prefix'), table_name='agent_api_keys')
    op.drop_table('agent_api_keys')
    op.drop_table('agents')
    op.drop_index(op.f('ix_users_supabase_auth_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_organizations_stripe_customer_id'), table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###