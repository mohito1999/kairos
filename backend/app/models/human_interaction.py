import uuid
from sqlalchemy import Column, String, Text, Boolean, DateTime, ForeignKey, func, JSON
from sqlalchemy.dialects.postgresql import UUID
from app.models.base import Base

class HumanInteraction(Base):
    __tablename__ = 'human_interactions'
    
    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid.uuid4)
    agent_id = Column(UUID(as_uuid=True), ForeignKey('agents.id'), nullable=False)
    organization_id = Column(UUID(as_uuid=True), ForeignKey('organizations.id'), nullable=False)
    
    # Data received from the webhook
    recording_url = Column(String, nullable=False)
    context = Column(JSON, nullable=True)
    
    # Data generated by Kairos
    transcript = Column(Text, nullable=True)
    is_success = Column(Boolean, nullable=True)
    status = Column(String, nullable=False, default='PENDING', index=True) # PENDING, TRANSCRIBING, PROCESSED, FAILED

    contributed_to_pattern_id = Column(UUID(as_uuid=True), ForeignKey('learned_patterns.id'), nullable=True)
    
    created_at = Column(DateTime(timezone=True), server_default=func.now(), nullable=False)
    updated_at = Column(DateTime(timezone=True), server_default=func.now(), onupdate=func.now(), nullable=False)